<UserControl x:Class="CADApplication.TestRunner.View.TestTreeView.TreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:view="clr-namespace:CADApplication.TestRunner.View"
             xmlns:propertyTreeView="clr-namespace:CADApplication.TestRunner.View.TestTreeView"
             xmlns:testRunner="clr-namespace:CADApplication.TestRunner.Runner.NUnit"
             xmlns:res="clr-namespace:CADApplication.TestRunner.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance propertyTreeView:TreeViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Revit.TestRunner;component/GlobalResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <view:BoolToHiddenConverter x:Key="BoolToVisConverter"/>

            <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}" >
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="Height" Value="15" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>

            <Style x:Key="TextStateStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding State}" Value="{x:Static testRunner:TestState.Passed}">
                        <Setter Property="Foreground" Value="Green"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding State}" Value="{x:Static testRunner:TestState.Failed}">
                        <Setter Property="Foreground" Value="Red"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="{x:Static testRunner:TestType.Case}">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
        
    </UserControl.Resources>

    <ListView ItemsSource="{Binding ObjectTree}" SelectedItem="{Binding SelectedNode}">
        <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border SnapsToDevicePixels="True"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="{TemplateBinding Background}">
                                <Border Name="InnerBorder" BorderBrush="CadetBlue">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF" />
                                        <GridViewRowPresenter Grid.RowSpan="2" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="LightBlue"/>
                                    <Setter Property="BorderThickness" TargetName="InnerBorder" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#D7EEF6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
            <GridView>
                <GridViewColumn Header="{x:Static res:Resource.Name}" Width="275">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type propertyTreeView:NodeViewModel}">
                            <DockPanel Margin="{Binding Margin}" >
                                <ToggleButton x:Name="mToggleButton" 
                                              IsChecked="{Binding IsExpanded}"
                                              Width="20" HorizontalAlignment="Left" VerticalAlignment="Center"
                                              Visibility="{Binding ShowExpandButton, Converter={StaticResource BoolToVisConverter}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate>
                                            <Polygon Name="mPolygon"  Stroke="DarkGray" 
                                                     VerticalAlignment="Center" HorizontalAlignment="Center" >
                                                <Polygon.Style>
                                                    <Style TargetType="Polygon">
                                                        <Setter Property="Points" Value="0,0 4,4 0,8"  />
                                                        <Setter Property="Fill" Value="White" />

                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=mToggleButton,Path=IsChecked}" Value="true">
                                                                <Setter Property="Points" Value="6,0 6,6 0,6" />
                                                                <Setter Property="Fill" Value="DarkGray"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Polygon.Style>
                                            </Polygon>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Image Style="{StaticResource ImageStateStyle}"/>
                                <TextBlock Text="{Binding Text}" ToolTip="{Binding ToolTip}"
                                           Margin="5,0,0,0" HorizontalAlignment="Left" Style="{StaticResource TextStateStyle}" >
                                </TextBlock>
                            </DockPanel>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Header="{x:Static res:Resource.Time}" Width="100">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type propertyTreeView:NodeViewModel}">
                            <TextBlock Text="{Binding TestTime}"/>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                
                <GridViewColumn Header="{x:Static res:Resource.Message}" Width="100" >
                    <GridViewColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type propertyTreeView:NodeViewModel}">
                            <TextBlock Style="{StaticResource TextStateStyle}"
                                   Text="{Binding Message}"
                                   VerticalAlignment="Center"/>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Header="{x:Static res:Resource.Type}" Width="60" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type propertyTreeView:NodeViewModel}">
                        <TextBlock Style="{StaticResource TextStateStyle}"
                                       Text="{Binding Type}" ToolTip="{Binding Type}"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>
</UserControl>
